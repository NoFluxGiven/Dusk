<!-- schema text {7e125a45-3d83-4043-b292-9e24f8ef27b4} generic {198980d8-3a93-4919-b4c6-dd1fb07a3a4b} -->
CVModel CVModel_0
{
	CVmeshList m_meshList = CVmeshList
	{
		CVmesh[] m_meshList = 
		[
			CVmesh
			{
				string m_meshName = "vaal_the_animated_constructradiant_reference_red"
				string m_meshFile = "models/summoner/vaal_the_animated_constructradiant_reference_red.smd"
				string m_materialSearchPath = ""
				bool m_bSkinParentedObjects = true
				bool m_bExpensiveTangents = false
				bool m_bExpensiveVertices = false
				CVmorphInfo* m_pMorphInfo = NULL
			}
		]
	}
	CVClothProxyMeshList m_clothProxyMeshList = CVClothProxyMeshList
	{
		CVClothProxyMesh[] m_clothProxyMeshList = 
		[
			
		]
		float m_flClothEnableThreshold = 0.050000
		bool m_bCreateStaticBone = false
		int m_nMaxBonesPerVertex = 4
		bool m_bRemoveUnusedBonesEnabled = false
		bool m_bUseOnlyRealMeshBones = false
		float m_flMatchProxiesToMeshes = 1.000000
		float m_flReservedFloat = 0.000000
		int m_nReservedInt = 0
		bool m_bReservedBool1 = false
		bool m_bReservedBool2 = false
		bool m_bReservedBool3 = false
		bool m_bReservedBool4 = false
	}
	CVphysicsMeshList m_physicsMeshList = CVphysicsMeshList
	{
		CVphysicsMesh[] m_meshList = 
		[
			
		]
	}
	CVmodelInfo* m_pModelInfo = NULL
	CVBoneFlagListReference m_pBoneFlagList = CVBoneFlagListReference
	{
		CVBoneFlagList* m_pObject = NULL
		string m_sFileName = ""
	}
	CVhitBoxSetListReference[] m_pHitBoxSetLists = 
	[
		CVhitBoxSetListReference
		{
			CVhitBoxSetList* m_pObject = &CVhitBoxSetList_0
			string m_sFileName = ""
		}
	]
	CVattachmentListReference[] m_pAttachmentLists = 
	[
		CVattachmentListReference
		{
			CVattachmentList* m_pObject = &CVattachmentList_0
			string m_sFileName = ""
		}
	]
	CVanimGroupReference[] m_pAnimGroups = 
	[
		CVanimGroupReference
		{
			CVanimGroup* m_pObject = &CVanimGroup_0
			string m_sFileName = ""
		}
	]
	CVNodeMaterialGroupListReference m_pMaterialGroupList = CVNodeMaterialGroupListReference
	{
		NodeMaterialGroupList_t* m_pObject = NULL
		string m_sFileName = ""
	}
	CVMeshGroupListReference m_pMeshGroupList = CVMeshGroupListReference
	{
		MeshGroupList_t* m_pObject = NULL
		string m_sFileName = ""
	}
	CVLODGroupListReference m_pLodGroupList = CVLODGroupListReference
	{
		LODGroupList_t* m_pObject = NULL
		string m_sFileName = ""
	}
	CVpropBreakableListReference m_pPropBreakableList = CVpropBreakableListReference
	{
		CVpropBreakableList* m_pObject = NULL
		string m_sFileName = ""
	}
	CVpropDataListReference m_pPropDataList = CVpropDataListReference
	{
		CVpropDataList* m_pObject = NULL
		string m_sFileName = ""
	}
	CVConstraintListReference[] m_pConstraintLists = 
	[
		
	]
	string m_collision = ""
	string m_sMDLFilename = ""
	string[] m_scriptFiles = 
	[
		
	]
	CVMaterialRemapList* m_pMaterialRemapList = &CVMaterialRemapList_0
	float m_flFbxScale = 1.000000
	float m_flQCScale = 1.000000
	CVPsf* m_pvPsf = NULL
	string m_keyValueText = ""
	bool m_bStaticProp = false
	bool m_bEnableClothProcessing = true
	float m_flClothEnableThreshold = 0.050000
	int m_nMaxClothVertsPerMesh = 2048
}

CVhitBoxSetList CVhitBoxSetList_0
{
	CVhitBoxSet[] m_HitBoxSets = 
	[
		CVhitBoxSet
		{
			string m_name = "default"
			CVhitBox[] m_HitBoxes = 
			[
				CVhitBox
				{
					string m_name = "GolemSpine1"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "GolemSpine1"
					float(3) m_vMinBounds = ( -10.747276, -11.369774, -15.534103 )
					float(3) m_vMaxBounds = ( 19.922859, 17.418091, 15.534060 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "GolemSpine2"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "GolemSpine2"
					float(3) m_vMinBounds = ( -20.251175, -10.478125, -15.534105 )
					float(3) m_vMaxBounds = ( 5.415871, 17.084169, 15.534058 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "GolemSpine3"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "GolemSpine3"
					float(3) m_vMinBounds = ( -21.453011, -20.149269, -33.300148 )
					float(3) m_vMaxBounds = ( 33.006134, 22.988609, 33.216408 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "GolemLArm1"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "GolemLArm1"
					float(3) m_vMinBounds = ( 3.620974, -12.291489, -12.425545 )
					float(3) m_vMaxBounds = ( 28.273193, 13.044230, 12.214573 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "GolemRArm1"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "GolemRArm1"
					float(3) m_vMinBounds = ( 3.673651, -12.291458, -12.214569 )
					float(3) m_vMaxBounds = ( 28.156605, 13.044271, 12.425552 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "GolemLArm2"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "GolemLArm2"
					float(3) m_vMinBounds = ( -1.710295, -12.139278, -9.745228 )
					float(3) m_vMaxBounds = ( 17.354324, 11.414124, 12.041128 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "GolemRArm2"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "GolemRArm2"
					float(3) m_vMinBounds = ( -1.981987, -12.605343, -12.751001 )
					float(3) m_vMaxBounds = ( 17.606625, 11.716469, 10.137787 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "GolemLLeg1"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "GolemLLeg1"
					float(3) m_vMinBounds = ( -0.261745, -7.557913, -6.147994 )
					float(3) m_vMaxBounds = ( 15.955244, 7.225126, 6.450148 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "GolemLArmPalm"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "GolemLArmPalm"
					float(3) m_vMinBounds = ( -17.216438, -11.812637, -20.345715 )
					float(3) m_vMaxBounds = ( 30.198067, 17.721237, 12.596546 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "GolemRArmPalm"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "GolemRArmPalm"
					float(3) m_vMinBounds = ( -17.216812, -11.997982, -12.641405 )
					float(3) m_vMaxBounds = ( 29.982441, 17.720028, 20.345385 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "GolemRLeg1"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "GolemRLeg1"
					float(3) m_vMinBounds = ( -0.300766, -7.556234, -6.321530 )
					float(3) m_vMaxBounds = ( 15.938313, 7.256842, 6.041240 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "GolemLLeg2"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "GolemLLeg2"
					float(3) m_vMinBounds = ( -6.725289, -6.440247, -5.358975 )
					float(3) m_vMaxBounds = ( 16.052345, 5.493042, 5.206006 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "GolemLArmDigit11"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "GolemLArmDigit11"
					float(3) m_vMinBounds = ( 1.220062, -3.971916, -5.058647 )
					float(3) m_vMaxBounds = ( 12.452713, 3.653450, 4.926459 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "GolemLArmDigit21"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "GolemLArmDigit21"
					float(3) m_vMinBounds = ( -5.853693, -5.460148, -9.946739 )
					float(3) m_vMaxBounds = ( 12.743696, 5.017078, 4.037424 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "GolemLArmDigit31"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "GolemLArmDigit31"
					float(3) m_vMinBounds = ( 1.091725, -5.363995, -4.118189 )
					float(3) m_vMaxBounds = ( 12.355800, 4.739029, 4.755939 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "GolemRArmDigit11"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "GolemRArmDigit11"
					float(3) m_vMinBounds = ( 1.219299, -3.972870, -4.925679 )
					float(3) m_vMaxBounds = ( 12.451683, 3.652397, 5.058656 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "GolemRArmDigit21"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "GolemRArmDigit21"
					float(3) m_vMinBounds = ( -6.015148, -5.464909, -4.037086 )
					float(3) m_vMaxBounds = ( 12.744053, 5.016190, 9.183189 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "GolemRArmDigit31"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "GolemRArmDigit31"
					float(3) m_vMinBounds = ( 1.092392, -5.364998, -4.755436 )
					float(3) m_vMaxBounds = ( 12.356466, 4.737831, 4.118471 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "GolemRLeg2"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "GolemRLeg2"
					float(3) m_vMinBounds = ( -6.724266, -6.427202, -5.155675 )
					float(3) m_vMaxBounds = ( 15.973402, 5.482027, 5.329838 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "GolemLLegAnkle"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "GolemLLegAnkle"
					float(3) m_vMinBounds = ( -6.589817, -6.588758, -4.171800 )
					float(3) m_vMaxBounds = ( 12.700451, 3.296865, 4.080606 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Golem_head"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Golem_head"
					float(3) m_vMinBounds = ( -8.650284, -14.252460, -14.269871 )
					float(3) m_vMaxBounds = ( 8.613739, 11.547756, 14.269905 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "GolemLArmDigit12"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "GolemLArmDigit12"
					float(3) m_vMinBounds = ( 1.027740, -4.086685, -4.924513 )
					float(3) m_vMaxBounds = ( 11.347195, 2.367416, 4.967634 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "GolemLArmDigit22"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "GolemLArmDigit22"
					float(3) m_vMinBounds = ( 1.488617, -5.488411, -3.857767 )
					float(3) m_vMaxBounds = ( 11.828377, 4.044491, 3.232050 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "GolemLArmDigit32"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "GolemLArmDigit32"
					float(3) m_vMinBounds = ( -3.253210, -4.993801, -3.292814 )
					float(3) m_vMaxBounds = ( 11.193422, 4.867489, 8.759411 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "GolemRArmDigit12"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "GolemRArmDigit12"
					float(3) m_vMinBounds = ( 0.813408, -4.058357, -4.977816 )
					float(3) m_vMaxBounds = ( 11.347095, 2.365860, 4.924369 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "GolemRArmDigit22"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "GolemRArmDigit22"
					float(3) m_vMinBounds = ( 1.597088, -5.481785, -3.232157 )
					float(3) m_vMaxBounds = ( 11.829227, 4.050426, 3.839397 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "GolemRArmDigit32"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "GolemRArmDigit32"
					float(3) m_vMinBounds = ( -4.019716, -4.971581, -8.959835 )
					float(3) m_vMaxBounds = ( 11.193771, 4.865997, 3.293538 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "GolemRLegAnkle"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "GolemRLegAnkle"
					float(3) m_vMinBounds = ( -6.545465, -6.601368, -3.932100 )
					float(3) m_vMaxBounds = ( 12.699095, 3.364689, 4.024452 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				}
			]
		}
	]
}

CVattachmentList CVattachmentList_0
{
	string m_name = ""
	CVattachment[] m_attachments = 
	[
		CVattachment
		{
			string m_name = "attach_attack1"
			CVattachmentInfluence[] m_influences = 
			[
				CVattachmentInfluence
				{
					string m_influenceName = "Golem_head"
					float(3) m_vTranslationOffset = ( 0.000000, 0.000000, 0.000000 )
					float(3) m_vRotationOffset = ( 0.000000, 0.000000, 0.000000 )
					float m_flWeight = 1.000000
					bool m_bRoot = false
				}
			]
		}
	]
}

CVanimGroup CVanimGroup_0
{
	string m_Name = ""
	CVReferenceSkeletonReference m_pReferenceSkeleton = CVReferenceSkeletonReference
	{
		CVReferenceSkeleton* m_pObject = NULL
		string m_sFileName = ""
	}
	CVBoneFlagListReference m_pBoneFlagList = CVBoneFlagListReference
	{
		CVBoneFlagList* m_pObject = NULL
		string m_sFileName = ""
	}
	CVseqGroupReference m_pSeqGroup = CVseqGroupReference
	{
		CVseqGroup* m_pObject = NULL
		string m_sFileName = ""
	}
	CVanimGroupReference[] m_pAnimGroups = 
	[
		
	]
	CVanim[] m_Vanim = 
	[
		CVanim
		{
			string m_Animationname = "center_pose"
			string m_Filepath = "models/summoner/vaal_the_animated_constructradiant_anims/center_pose.smd"
			int m_nStartframe = 0
			int m_nEndframe = 0
			float m_flFps = 30.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = false
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "courier_death"
			string m_Filepath = "models/summoner/vaal_the_animated_constructradiant_anims/courier_death.smd"
			int m_nStartframe = 0
			int m_nEndframe = 50
			float m_flFps = 30.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = false
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = "ACT_DOTA_DIE"
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				CMotionFrame
				{
					int m_nFrame = 0
					bool m_bExtractTX = true
					bool m_bExtractTY = true
					bool m_bExtractTZ = false
					bool m_bExtractRX = false
					bool m_bExtractRY = false
					bool m_bExtractRZ = false
					bool m_bDiscardTX = false
					bool m_bDiscardTY = false
					bool m_bDiscardTZ = false
					bool m_bDiscardRX = false
					bool m_bDiscardRY = false
					bool m_bDiscardRZ = false
				}
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "courier_idle"
			string m_Filepath = "models/summoner/vaal_the_animated_constructradiant_anims/courier_idle.smd"
			int m_nStartframe = 0
			int m_nEndframe = 85
			float m_flFps = 30.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = true
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = "ACT_DOTA_IDLE"
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "courier_idle_rare"
			string m_Filepath = "models/summoner/vaal_the_animated_constructradiant_anims/courier_idle_rare.smd"
			int m_nStartframe = 0
			int m_nEndframe = 85
			float m_flFps = 30.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = true
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "courier_run"
			string m_Filepath = "models/summoner/vaal_the_animated_constructradiant_anims/courier_run.smd"
			int m_nStartframe = 0
			int m_nEndframe = 46
			float m_flFps = 30.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = true
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = "ACT_DOTA_RUN"
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				CMotionFrame
				{
					int m_nFrame = 0
					bool m_bExtractTX = true
					bool m_bExtractTY = true
					bool m_bExtractTZ = false
					bool m_bExtractRX = false
					bool m_bExtractRY = false
					bool m_bExtractRZ = false
					bool m_bDiscardTX = false
					bool m_bDiscardTY = false
					bool m_bDiscardTZ = false
					bool m_bDiscardRX = false
					bool m_bDiscardRY = false
					bool m_bDiscardRZ = false
				}
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "courier_spawn"
			string m_Filepath = "models/summoner/vaal_the_animated_constructradiant_anims/courier_spawn.smd"
			int m_nStartframe = 0
			int m_nEndframe = 35
			float m_flFps = 30.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = false
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = "ACT_DOTA_SPAWN"
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "courier_turn_center"
			string m_Filepath = "models/summoner/vaal_the_animated_constructradiant_anims/courier_turn_center.smd"
			int m_nStartframe = 0
			int m_nEndframe = 1
			float m_flFps = 30.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = false
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "courier_turn_left"
			string m_Filepath = "models/summoner/vaal_the_animated_constructradiant_anims/courier_turn_left.smd"
			int m_nStartframe = 0
			int m_nEndframe = 1
			float m_flFps = 30.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = false
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "courier_turn_right"
			string m_Filepath = "models/summoner/vaal_the_animated_constructradiant_anims/courier_turn_right.smd"
			int m_nStartframe = 0
			int m_nEndframe = 1
			float m_flFps = 30.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = false
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "left_pose"
			string m_Filepath = "models/summoner/vaal_the_animated_constructradiant_anims/left_pose.smd"
			int m_nStartframe = 0
			int m_nEndframe = 0
			float m_flFps = 30.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = false
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "right_pose"
			string m_Filepath = "models/summoner/vaal_the_animated_constructradiant_anims/right_pose.smd"
			int m_nStartframe = 0
			int m_nEndframe = 0
			float m_flFps = 30.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = false
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "courier_attack"
			string m_Filepath = "models/summoner/vaal_the_animated_constructradiant_anims/new_animations/courier_attack.smd"
			int m_nStartframe = 0
			int m_nEndframe = 41
			float m_flFps = 45.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = false
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = "ACT_DOTA_ATTACK"
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				CMotionFrame
				{
					int m_nFrame = 0
					bool m_bExtractTX = true
					bool m_bExtractTY = true
					bool m_bExtractTZ = false
					bool m_bExtractRX = false
					bool m_bExtractRY = false
					bool m_bExtractRZ = false
					bool m_bDiscardTX = false
					bool m_bDiscardTY = false
					bool m_bDiscardTZ = false
					bool m_bDiscardRX = false
					bool m_bDiscardRY = false
					bool m_bDiscardRZ = false
				}
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 100.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		}
	]
	string[] m_sScripts = 
	[
		
	]
}

CVMaterialRemapList CVMaterialRemapList_0
{
	CVMaterialRemap[] m_vMaterialRemapList = 
	[
		CVMaterialRemap
		{
			string m_sSearchMaterial = "materials/models/items/courier/vaal_the_animated_constructradiant/vaal_the_animated_constructradiant_color.vmat"
			string m_sReplaceMaterial = "materials/summoner/summoner_vassal_red.vmat"
		}
	]
}